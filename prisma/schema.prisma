// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Authentication

enum UserRole {
  ADMIN
  DOCTOR
  USER
}

model User {
  id                    String                 @id @default(cuid())
  name                  String?
  email                 String?                @unique
  emailVerified         DateTime?
  phone                 String?
  gender                String?
  image                 String?
  password              String?
  role                  UserRole               @default(USER)
  accounts              Account[]
  isTwoFactorEnabled    Boolean                @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
  masterId              String?
  master                Master?                @relation(fields: [masterId], references: [id], onDelete: Cascade)
  Rate                  Rate[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id String @id @default(cuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

// Admin

model Master {
  id          String @id @default(cuid())
  name        String @unique
  description String
  User        User[]
}

enum CouponType {
  PERMANENT
  LIMITED
}

enum DiscountType {
  PERCENT
  VALUE
}

model Coupon {
  id            String       @id @default(cuid())
  coupon        String       @unique
  type          CouponType   @default(PERMANENT)
  discountType  DiscountType @default(VALUE)
  discountValue Int
  from          DateTime?
  to            DateTime?
  useTimes      String
}

model Rate {
  id          String @id @default(cuid())
  doctorId    String
  doctor      User   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  message     String
  rateValue   Int
  patientName String
}
